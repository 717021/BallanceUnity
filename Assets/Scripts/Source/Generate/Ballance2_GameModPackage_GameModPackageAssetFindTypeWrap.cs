//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Ballance2_GameModPackage_GameModPackageAssetFindTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Ballance2.GameModPackage.GameModPackageAssetFindType));
		L.RegVar("UseZip", get_UseZip, null);
		L.RegVar("UseAssetBundle", get_UseAssetBundle, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Ballance2.GameModPackage.GameModPackageAssetFindType>.Check = CheckType;
		StackTraits<Ballance2.GameModPackage.GameModPackageAssetFindType>.Push = Push;
	}

	static void Push(IntPtr L, Ballance2.GameModPackage.GameModPackageAssetFindType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Ballance2.GameModPackage.GameModPackageAssetFindType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseZip(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModPackageAssetFindType.UseZip);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseAssetBundle(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModPackageAssetFindType.UseAssetBundle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Ballance2.GameModPackage.GameModPackageAssetFindType o = (Ballance2.GameModPackage.GameModPackageAssetFindType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

