//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameUIMgr_StandardUIMakerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameUIMgr.StandardUIMaker), typeof(System.Object));
		L.RegFunction("RegisterUIEle", RegisterUIEle);
		L.RegFunction("IsUIEleRegistered", IsUIEleRegistered);
		L.RegFunction("UnregisterUIEle", UnregisterUIEle);
		L.RegFunction("RegisterUIGroup", RegisterUIGroup);
		L.RegFunction("IsUIGroupRegistered", IsUIGroupRegistered);
		L.RegFunction("UnregisterUIGroup", UnregisterUIGroup);
		L.RegFunction("RegisterMenuPage", RegisterMenuPage);
		L.RegFunction("RegisterMenuPageWithTemplate", RegisterMenuPageWithTemplate);
		L.RegFunction("IsMenuPageRegistered", IsMenuPageRegistered);
		L.RegFunction("UnegisterMenuPage", UnegisterMenuPage);
		L.RegFunction("GoMenuPage", GoMenuPage);
		L.RegFunction("HideMenuPage", HideMenuPage);
		L.RegFunction("BackForntMenuPage", BackForntMenuPage);
		L.RegFunction("CreateElementAuto", CreateElementAuto);
		L.RegFunction("CreateMenuAuto", CreateMenuAuto);
		L.RegFunction("ShowDialog", ShowDialog);
		L.RegFunction("ShowDialogThreeChoice", ShowDialogThreeChoice);
		L.RegFunction("IsDialogClosed", IsDialogClosed);
		L.RegFunction("New", _CreateGameUIMgr_StandardUIMaker);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameUIMgr_StandardUIMaker(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				GameUIMgr arg0 = (GameUIMgr)ToLua.CheckObject<GameUIMgr>(L, 1);
				GameUIMgr.StandardUIMaker obj = new GameUIMgr.StandardUIMaker(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameUIMgr.StandardUIMaker.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterUIEle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			bool o = obj.RegisterUIEle(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsUIEleRegistered(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsUIEleRegistered(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterUIEle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.UnregisterUIEle(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterUIGroup(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool o = obj.RegisterUIGroup(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
				bool o = obj.RegisterUIGroup(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameUIMgr.StandardUIMaker.RegisterUIGroup");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsUIGroupRegistered(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsUIGroupRegistered(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterUIGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.UnregisterUIGroup(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterMenuPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			GlobalUI.UIMenu arg2 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 4);
			GlobalUI.UIMenu o = obj.RegisterMenuPage(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterMenuPageWithTemplate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 4, typeof(UnityEngine.GameObject));
			GlobalUI.UIMenu o = obj.RegisterMenuPageWithTemplate(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMenuPageRegistered(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.IsMenuPageRegistered(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnegisterMenuPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.UnegisterMenuPage(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GoMenuPage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIPage arg0 = (GlobalUI.UIPage)ToLua.CheckObject<GlobalUI.UIPage>(L, 2);
				obj.GoMenuPage(arg0);
				return 0;
			}
			else if (count == 3)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				obj.GoMenuPage(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameUIMgr.StandardUIMaker.GoMenuPage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideMenuPage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.HideMenuPage(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<GlobalUI.UIPage>(L, 2))
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIPage arg0 = (GlobalUI.UIPage)ToLua.ToObject(L, 2);
				obj.HideMenuPage(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameUIMgr.StandardUIMaker.HideMenuPage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BackForntMenuPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.BackForntMenuPage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateElementAuto(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIMenu arg0 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				GlobalUI.UIElement o = obj.CreateElementAuto(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIMenu arg0 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				GlobalUI.UIElement o = obj.CreateElementAuto(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 5)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIMenu arg0 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				GlobalUI.UIElement o = obj.CreateElementAuto(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 6)
			{
				GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
				GlobalUI.UIMenu arg0 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				string arg4 = ToLua.CheckString(L, 6);
				GlobalUI.UIElement o = obj.CreateElementAuto(arg0, arg1, arg2, arg3, arg4);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameUIMgr.StandardUIMaker.CreateElementAuto");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateMenuAuto(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			GlobalUI.UIMenu arg0 = (GlobalUI.UIMenu)ToLua.CheckObject<GlobalUI.UIMenu>(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.CreateMenuAuto(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowDialog(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			obj.ShowDialog(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowDialogThreeChoice(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			string arg5 = ToLua.CheckString(L, 7);
			obj.ShowDialogThreeChoice(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsDialogClosed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameUIMgr.StandardUIMaker obj = (GameUIMgr.StandardUIMaker)ToLua.CheckObject<GameUIMgr.StandardUIMaker>(L, 1);
			bool o = obj.IsDialogClosed();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

