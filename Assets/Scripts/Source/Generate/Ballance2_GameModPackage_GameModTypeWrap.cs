//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Ballance2_GameModPackage_GameModTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Ballance2.GameModPackage.GameModType));
		L.RegVar("Unknow", get_Unknow, null);
		L.RegVar("Resource", get_Resource, null);
		L.RegVar("ModPackage", get_ModPackage, null);
		L.RegVar("ZipPackage", get_ZipPackage, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Ballance2.GameModPackage.GameModType>.Check = CheckType;
		StackTraits<Ballance2.GameModPackage.GameModType>.Push = Push;
	}

	static void Push(IntPtr L, Ballance2.GameModPackage.GameModType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Ballance2.GameModPackage.GameModType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Unknow(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModType.Unknow);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Resource(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModType.Resource);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ModPackage(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModType.ModPackage);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ZipPackage(IntPtr L)
	{
		ToLua.Push(L, Ballance2.GameModPackage.GameModType.ZipPackage);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Ballance2.GameModPackage.GameModType o = (Ballance2.GameModPackage.GameModType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

