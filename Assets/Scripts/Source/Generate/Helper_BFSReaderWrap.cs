//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Helper_BFSReaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Helper.BFSReader), typeof(System.Object));
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("HasProperty", HasProperty);
		L.RegFunction("GetPropertyValue", GetPropertyValue);
		L.RegFunction("GetPropertyValueChildValue", GetPropertyValueChildValue);
		L.RegFunction("GetPropertyValueChildValue2", GetPropertyValueChildValue2);
		L.RegFunction("GetLineAllItems", GetLineAllItems);
		L.RegFunction("GetBlockAllItems", GetBlockAllItems);
		L.RegFunction("New", _CreateHelper_BFSReader);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Props", get_Props, null);
		L.RegVar("Blocks", get_Blocks, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHelper_BFSReader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Helper.BFSReader obj = new Helper.BFSReader();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<UnityEngine.TextAsset>(L, 1))
			{
				UnityEngine.TextAsset arg0 = (UnityEngine.TextAsset)ToLua.ToObject(L, 1);
				Helper.BFSReader obj = new Helper.BFSReader(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<string>(L, 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				Helper.BFSReader obj = new Helper.BFSReader(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Helper.BFSReader.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasProperty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasProperty(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPropertyValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetPropertyValue(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPropertyValueChildValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string[] o = obj.GetPropertyValueChildValue(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPropertyValueChildValue2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string[] o = obj.GetPropertyValueChildValue2(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLineAllItems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string[] o = obj.GetLineAllItems();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBlockAllItems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Helper.BFSReader obj = (Helper.BFSReader)ToLua.CheckObject<Helper.BFSReader>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string[] o = obj.GetBlockAllItems(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Props(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Helper.BFSReader obj = (Helper.BFSReader)o;
			System.Collections.Generic.Dictionary<string,string> ret = obj.Props;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Props on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Blocks(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Helper.BFSReader obj = (Helper.BFSReader)o;
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<string>> ret = obj.Blocks;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Blocks on a nil value");
		}
	}
}

